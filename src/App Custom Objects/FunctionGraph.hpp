////////////////////////////////////////////////////////////
// Created by Kornel Domeradzki.
// Copyright Â© 2018 Kornel Domeradzki. All rights reserved.
////////////////////////////////////////////////////////////
#pragma once

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "../App Engine/App.hpp"
#include "../DEFINITIONS.h"
#include <SFML/Graphics.hpp>

namespace ArktisProductions
{
    ////////////////////////////////////////////////////////////
    /// \brief DiagramState class
    ///
    ////////////////////////////////////////////////////////////
    class FunctionGraph : public sf::Drawable
    {
    public:
        ////////////////////////////////////////////////////////////
        /// \brief DiagramState constructor
        ///
        ////////////////////////////////////////////////////////////
        FunctionGraph(GameDataRef data, float xMin, float xMax, float precision);

    private:
        ////////////////////////////////////////////////////////////
        /// \brief Creates a sf::Vertex object in a specific spot
        ///
        /// \returns sf::vertex in a specific spot
        ///
        ////////////////////////////////////////////////////////////
        sf::Vertex valueToCoordinate(float x, float y);

        ////////////////////////////////////////////////////////////
        /// \brief Calculates the coordinates of all arguments of a given
        ///         function
        ///
        ////////////////////////////////////////////////////////////
        void calculateArgs();

        ////////////////////////////////////////////////////////////
        /// \brief Draws the graph
        ///
        ////////////////////////////////////////////////////////////
        void draw(sf::RenderTarget& target, sf::RenderStates states) const;

        float *xMin, *xMax, precision;

        sf::VertexArray vertexArray;

        GameDataRef _data;
    };
}